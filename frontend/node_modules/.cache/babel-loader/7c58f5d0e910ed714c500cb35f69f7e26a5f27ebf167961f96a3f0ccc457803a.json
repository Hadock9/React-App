{"ast":null,"code":"var _jsxFileName = \"/Users/vasylfalyovskij/Desktop/React-App/frontend/src/js/loginGoogle.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logon() {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const responseSucess = async response => {\n    const {\n      credential\n    } = response;\n    try {\n      const response = await fetch('http://localhost:4000/api/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credential)\n      });\n      console.log('login is successful', res.data);\n      setShowLogin(true);\n    } catch (error) {\n      console.error('login failed', error);\n    }\n  };\n  const responseFailure = () => {\n    console.log('login is not successful');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showLogin && /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"YOUR_GOOGLE_CLIENT_ID\",\n      onSuccess: responseSucess,\n      onFailure: responseFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_s(Logon, \"98Ax/GnzOET9wQRnerBqUtng7n4=\");\n_c = Logon;\nvar _c;\n$RefreshReg$(_c, \"Logon\");","map":{"version":3,"names":["GoogleLogin","useState","jsxDEV","_jsxDEV","Logon","_s","showLogin","setShowLogin","responseSucess","response","credential","fetch","method","headers","body","JSON","stringify","console","log","res","data","error","responseFailure","className","children","clientId","onSuccess","onFailure","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/js/loginGoogle.js"],"sourcesContent":["import { GoogleLogin } from '@react-oauth/google'\nimport { useState } from 'react'\n\nexport default function Logon() {\n\tconst [showLogin, setShowLogin] = useState(false)\n\n\tconst responseSucess = async response => {\n\t\tconst { credential } = response\n\n\t\ttry {\n\t\t\tconst response = await fetch('http://localhost:4000/api/google-login', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(credential),\n\t\t\t})\n\t\t\tconsole.log('login is successful', res.data)\n\t\t\tsetShowLogin(true)\n\t\t} catch (error) {\n\t\t\tconsole.error('login failed', error)\n\t\t}\n\t}\n\n\tconst responseFailure = () => {\n\t\tconsole.log('login is not successful')\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{!showLogin && (\n\t\t\t\t<GoogleLogin\n\t\t\t\t\tclientId='YOUR_GOOGLE_CLIENT_ID'\n\t\t\t\t\tonSuccess={responseSucess}\n\t\t\t\t\tonFailure={responseFailure}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMO,cAAc,GAAG,MAAMC,QAAQ,IAAI;IACxC,MAAM;MAAEC;IAAW,CAAC,GAAGD,QAAQ;IAE/B,IAAI;MACH,MAAMA,QAAQ,GAAG,MAAME,KAAK,CAAC,wCAAwC,EAAE;QACtEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACR,cAAc,EAAE;QACjB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,UAAU;MAChC,CAAC,CAAC;MACFO,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,GAAG,CAACC,IAAI,CAAC;MAC5Cb,YAAY,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACfJ,OAAO,CAACI,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACrC;EACD,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC7BL,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACvC,CAAC;EAED,oBACCf,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,EAClB,CAAClB,SAAS,iBACVH,OAAA,CAACH,WAAW;MACXyB,QAAQ,EAAC,uBAAuB;MAChCC,SAAS,EAAElB,cAAe;MAC1BmB,SAAS,EAAEL;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAAC1B,EAAA,CApCuBD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}