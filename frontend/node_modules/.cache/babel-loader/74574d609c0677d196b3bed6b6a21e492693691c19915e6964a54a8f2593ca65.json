{"ast":null,"code":"var _jsxFileName = \"/Users/vasylfalyovskij/Desktop/React-App/frontend/src/pages/Match.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Match = () => {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMatches = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:4000/api/Match_List/Match/1');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        setMatches(data); // Assuming data is an array of matches\n      } catch (error) {\n        console.error('Fetch error:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMatches();\n  }, []);\n\n  // Check if matches are loaded and if there's at least one match\n  const firstMatch = matches[0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this) : firstMatch ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"First Match:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [firstMatch.Team1Name, \" vs \", firstMatch.Team2Name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: firstMatch.Team1Logo,\n        alt: `${firstMatch.Team1Name} Logo`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No matches found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_s(Match, \"YgnPwiiwgTHXx31phIhN1rv+1Dw=\");\n_c = Match;\nvar _c;\n$RefreshReg$(_c, \"Match\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Match","_s","matches","setMatches","loading","setLoading","error","setError","fetchMatches","response","fetch","ok","Error","data","json","console","message","firstMatch","children","fileName","_jsxFileName","lineNumber","columnNumber","Team1Name","Team2Name","src","Team1Logo","alt","_c","$RefreshReg$"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/pages/Match.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\n\nexport const Match = () => {\n\tconst [matches, setMatches] = useState([])\n\tconst [loading, setLoading] = useState(true)\n\tconst [error, setError] = useState(null)\n\n\tuseEffect(() => {\n\t\tconst fetchMatches = async () => {\n\t\t\tsetLoading(true)\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t'http://localhost:4000/api/Match_List/Match/1'\n\t\t\t\t)\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error('Network response was not ok')\n\t\t\t\t}\n\t\t\t\tconst data = await response.json()\n\t\t\t\tsetMatches(data) // Assuming data is an array of matches\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Fetch error:', error)\n\t\t\t\tsetError(error.message)\n\t\t\t} finally {\n\t\t\t\tsetLoading(false)\n\t\t\t}\n\t\t}\n\n\t\tfetchMatches()\n\t}, [])\n\n\t// Check if matches are loaded and if there's at least one match\n\tconst firstMatch = matches[0]\n\n\treturn (\n\t\t<div>\n\t\t\t{loading ? (\n\t\t\t\t<p>Loading...</p>\n\t\t\t) : error ? (\n\t\t\t\t<p>Error: {error}</p>\n\t\t\t) : firstMatch ? (\n\t\t\t\t<div>\n\t\t\t\t\t<h2>First Match:</h2>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{firstMatch.Team1Name} vs {firstMatch.Team2Name}\n\t\t\t\t\t</p>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={firstMatch.Team1Logo}\n\t\t\t\t\t\talt={`${firstMatch.Team1Name} Logo`}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<p>No matches found.</p>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACf,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAChCH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACH,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC3B,8CACD,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAC/C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,UAAU,CAACU,IAAI,CAAC,EAAC;MAClB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACfS,OAAO,CAACT,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;QACpCC,QAAQ,CAACD,KAAK,CAACU,OAAO,CAAC;MACxB,CAAC,SAAS;QACTX,UAAU,CAAC,KAAK,CAAC;MAClB;IACD,CAAC;IAEDG,YAAY,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMS,UAAU,GAAGf,OAAO,CAAC,CAAC,CAAC;EAE7B,oBACCH,OAAA;IAAAmB,QAAA,EACEd,OAAO,gBACPL,OAAA;MAAAmB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACdhB,KAAK,gBACRP,OAAA;MAAAmB,QAAA,GAAG,SAAO,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAClBL,UAAU,gBACblB,OAAA;MAAAmB,QAAA,gBACCnB,OAAA;QAAAmB,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBvB,OAAA;QAAAmB,QAAA,GACED,UAAU,CAACM,SAAS,EAAC,MAAI,EAACN,UAAU,CAACO,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACJvB,OAAA;QACC0B,GAAG,EAAER,UAAU,CAACS,SAAU;QAC1BC,GAAG,EAAE,GAAGV,UAAU,CAACM,SAAS;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,gBAENvB,OAAA;MAAAmB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACvB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER,CAAC;AAAArB,EAAA,CArDYD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}