{"ast":null,"code":"import { useEffect, useState } from 'react';\nconst [Email, setEmail] = useState('');\nconst [Password, setPassword] = useState('');\nconst [RePassword, setRePassword] = useState('');\nconst [First_Name, setFirst_Name] = useState('');\nconst [Last_Name, setLast_Name] = useState('');\nconst [FormValid, setFormValid] = useState(false);\nconst [EmailDirty, setEmailDirty] = useState(false);\nconst [PasswordDirty, setPasswordDirty] = useState(false);\nconst [RePasswordDirty, setRePasswordDirty] = useState(false);\nconst [First_NameDirty, setFirst_NameDirty] = useState(false);\nconst [Last_NameDirty, setLast_NameDirty] = useState(false);\nuseEffect(() => {\n  if (EmailError || PasswordError) {\n    setFormValid(false);\n  } else {\n    setFormValid(true);\n  }\n}, [EmailError, PasswordError]);\nexport const blurHandler = e => {\n  switch (e.target.name) {\n    case 'Email':\n      setEmailDirty(true);\n      break;\n    case 'Password':\n      setPasswordDirty(true);\n      break;\n  }\n};\nexport const EmailHandler = e => {\n  setEmail(e.target.value);\n  const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  if (!re.test(String(e.target.value).toLowerCase())) {\n    setEmailError('Email не правильний');\n  } else {\n    setEmailError('');\n  }\n};\n_c = EmailHandler;\nexport const PasswordHandler = e => {\n  setPassword(e.target.value);\n  if (e.target.value.length < 4 || e.target.value.length > 64) {\n    setPasswordError('Password має бути більшим за 8 символів і меншим за 64 ');\n    if (!e.target.value) {\n      setPasswordError('Password не може бути пустим');\n    }\n  } else {\n    setPasswordError('');\n  }\n};\n_c2 = PasswordHandler;\nvar _c, _c2;\n$RefreshReg$(_c, \"EmailHandler\");\n$RefreshReg$(_c2, \"PasswordHandler\");","map":{"version":3,"names":["useEffect","useState","Email","setEmail","Password","setPassword","RePassword","setRePassword","First_Name","setFirst_Name","Last_Name","setLast_Name","FormValid","setFormValid","EmailDirty","setEmailDirty","PasswordDirty","setPasswordDirty","RePasswordDirty","setRePasswordDirty","First_NameDirty","setFirst_NameDirty","Last_NameDirty","setLast_NameDirty","EmailError","PasswordError","blurHandler","e","target","name","EmailHandler","value","re","test","String","toLowerCase","setEmailError","_c","PasswordHandler","length","setPasswordError","_c2","$RefreshReg$"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/components/FormValidation.js"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst [Email, setEmail] = useState('')\nconst [Password, setPassword] = useState('')\nconst [RePassword, setRePassword] = useState('')\nconst [First_Name, setFirst_Name] = useState('')\nconst [Last_Name, setLast_Name] = useState('')\nconst [FormValid, setFormValid] = useState(false)\n\nconst [EmailDirty, setEmailDirty] = useState(false)\nconst [PasswordDirty, setPasswordDirty] = useState(false)\nconst [RePasswordDirty, setRePasswordDirty] = useState(false)\nconst [First_NameDirty, setFirst_NameDirty] = useState(false)\nconst [Last_NameDirty, setLast_NameDirty] = useState(false)\nuseEffect(() => {\n\tif (EmailError || PasswordError) {\n\t\tsetFormValid(false)\n\t} else {\n\t\tsetFormValid(true)\n\t}\n}, [EmailError, PasswordError])\n\nexport const blurHandler = e => {\n\tswitch (e.target.name) {\n\t\tcase 'Email':\n\t\t\tsetEmailDirty(true)\n\t\t\tbreak\n\t\tcase 'Password':\n\t\t\tsetPasswordDirty(true)\n\t\t\tbreak\n\t}\n}\nexport const EmailHandler = e => {\n\tsetEmail(e.target.value)\n\n\tconst re =\n\t\t/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\n\tif (!re.test(String(e.target.value).toLowerCase())) {\n\t\tsetEmailError('Email не правильний')\n\t} else {\n\t\tsetEmailError('')\n\t}\n}\nexport const PasswordHandler = e => {\n\tsetPassword(e.target.value)\n\tif (e.target.value.length < 4 || e.target.value.length > 64) {\n\t\tsetPasswordError('Password має бути більшим за 8 символів і меншим за 64 ')\n\t\tif (!e.target.value) {\n\t\t\tsetPasswordError('Password не може бути пустим')\n\t\t}\n\t} else {\n\t\tsetPasswordError('')\n\t}\n}\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;AACtC,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;AAC5C,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;AAChD,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;AAChD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;AAC9C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;AAEjD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;AACnD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;AACzD,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;AAC7D,MAAM,CAACmB,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;AAC7D,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,KAAK,CAAC;AAC3DD,SAAS,CAAC,MAAM;EACf,IAAIwB,UAAU,IAAIC,aAAa,EAAE;IAChCZ,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC,MAAM;IACNA,YAAY,CAAC,IAAI,CAAC;EACnB;AACD,CAAC,EAAE,CAACW,UAAU,EAAEC,aAAa,CAAC,CAAC;AAE/B,OAAO,MAAMC,WAAW,GAAGC,CAAC,IAAI;EAC/B,QAAQA,CAAC,CAACC,MAAM,CAACC,IAAI;IACpB,KAAK,OAAO;MACXd,aAAa,CAAC,IAAI,CAAC;MACnB;IACD,KAAK,UAAU;MACdE,gBAAgB,CAAC,IAAI,CAAC;MACtB;EACF;AACD,CAAC;AACD,OAAO,MAAMa,YAAY,GAAGH,CAAC,IAAI;EAChCxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC;EAExB,MAAMC,EAAE,GACP,sHAAsH;EAEvH,IAAI,CAACA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACP,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;IACnDC,aAAa,CAAC,qBAAqB,CAAC;EACrC,CAAC,MAAM;IACNA,aAAa,CAAC,EAAE,CAAC;EAClB;AACD,CAAC;AAAAC,EAAA,GAXYP,YAAY;AAYzB,OAAO,MAAMQ,eAAe,GAAGX,CAAC,IAAI;EACnCtB,WAAW,CAACsB,CAAC,CAACC,MAAM,CAACG,KAAK,CAAC;EAC3B,IAAIJ,CAAC,CAACC,MAAM,CAACG,KAAK,CAACQ,MAAM,GAAG,CAAC,IAAIZ,CAAC,CAACC,MAAM,CAACG,KAAK,CAACQ,MAAM,GAAG,EAAE,EAAE;IAC5DC,gBAAgB,CAAC,yDAAyD,CAAC;IAC3E,IAAI,CAACb,CAAC,CAACC,MAAM,CAACG,KAAK,EAAE;MACpBS,gBAAgB,CAAC,8BAA8B,CAAC;IACjD;EACD,CAAC,MAAM;IACNA,gBAAgB,CAAC,EAAE,CAAC;EACrB;AACD,CAAC;AAAAC,GAAA,GAVYH,eAAe;AAAA,IAAAD,EAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}