{"ast":null,"code":"import{useEffect,useState}from'react';import{Link,useSearchParams}from'react-router-dom';import{formatDate}from'../js/TimeValidation';import style from'../styles/Matches.module.css';import{CheckFetch}from'./BadFatchDisclaimer';import{NoResultDisclaimer}from'./NoResultDisclaimer';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export function MatchBlock(_ref){let{value}=_ref;const[Match,setData]=useState([]);const[failedToFetch,setFailedToFetch]=useState(false);const[searchParams]=useSearchParams();const game_id=searchParams.get('game_id');console.log(game_id);// Fetch Match_List${game_id} from the backend\nuseEffect(()=>{fetch(`http://localhost:4000/api/Match_List/${game_id}`).then(res=>res.json()).then(data=>{setFailedToFetch(false);setData(data);}).catch(error=>{setFailedToFetch(true);console.log('Failed to fetch: ',error);});},[]);console.log(Match);const filterMatches=Match.filter(Match=>{return Match.Team1Name.toLowerCase().includes(value.toLowerCase())||Match.Team2Name.toLowerCase().includes(value.toLowerCase());});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Matches\"}),failedToFetch?/*#__PURE__*/_jsx(CheckFetch,{}):console.log('Successful Fetch'),filterMatches.length>0?filterMatches.map(Match=>{return/*#__PURE__*/_jsxs(Link,{to:`${Match.Team1Name}_Vs_${Match.Team2Name}?idMatch=${Match.MatchID}`,children:[console.log(Match),/*#__PURE__*/_jsxs(\"div\",{className:style.MatchesBlock,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.MatchesBlockInfo,children:[/*#__PURE__*/_jsxs(\"div\",{className:style.MatchesBlockTeam,children:[/*#__PURE__*/_jsx(\"div\",{className:style.MatchesBlockCountry,children:/*#__PURE__*/_jsx(\"img\",{draggable:\"false\",className:style.MatchesBlockImgCountry,src:'/'+Match.Team1Country,alt:\"\"})}),/*#__PURE__*/_jsx(\"img\",{draggable:\"false\",className:style.MatchesBlockImgLogo,src:'/'+Match.Team1Logo,alt:\"\"}),console.log(Match.Team1Country),/*#__PURE__*/_jsx(\"div\",{className:`${style.MatchesBlockCoef} ${style.MatchesBlockTeam1Coef}`,children:/*#__PURE__*/_jsx(\"p\",{children:Match.Team1Coef})})]}),/*#__PURE__*/_jsxs(\"div\",{className:style.MatchesBlockCenter,children:[/*#__PURE__*/_jsx(\"p\",{className:style.MatchesBlockVsDateTime,children:formatDate(Match.VsDate)}),/*#__PURE__*/_jsx(\"p\",{className:style.MatchesBlockVs,children:\"Vs\"}),/*#__PURE__*/_jsxs(\"p\",{className:style.MatchesBlockPlace,children:[\" \",Match.Place]})]}),/*#__PURE__*/_jsxs(\"div\",{className:style.MatchesBlockTeam2,children:[/*#__PURE__*/_jsx(\"div\",{className:style.MatchesBlockCountry,children:/*#__PURE__*/_jsx(\"img\",{draggable:\"false\",className:style.MatchesBlockImgCountry,src:'/'+Match.Team2Country,alt:\"\"})}),/*#__PURE__*/_jsx(\"img\",{draggable:\"false\",className:style.MatchesBlockImgLogo,src:'/'+Match.Team2Logo,alt:\"\"}),/*#__PURE__*/_jsx(\"div\",{className:`${style.MatchesBlockCoef} ${style.MatchesBlockTeam2Coef}`,children:/*#__PURE__*/_jsx(\"p\",{children:Match.Team2Coef})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:style.MatchesBlockSide,children:[/*#__PURE__*/_jsx(\"div\",{className:style.MatchesSideBlockImg1,children:/*#__PURE__*/_jsx(\"img\",{draggable:\"false\",className:style.MatchesSideImg,src:'/'+Match.GameMinLogo,alt:\"\"})}),/*#__PURE__*/_jsx(\"div\",{className:style.MatchesSideText,children:/*#__PURE__*/_jsx(\"p\",{children:Match.season})}),/*#__PURE__*/_jsx(\"div\",{className:style.MatchesSideBlockImg,children:/*#__PURE__*/_jsx(\"img\",{draggable:\"false\",className:style.MatchesSideImg,src:'/'+Match.GameMinLogo,alt:\"\"})})]})]})]},Match.MatchID);}):failedToFetch?console.log('Failed Fatch No Results :)'):/*#__PURE__*/_jsx(NoResultDisclaimer,{value:value})]});}","map":{"version":3,"names":["useEffect","useState","Link","useSearchParams","formatDate","style","CheckFetch","NoResultDisclaimer","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MatchBlock","_ref","value","Match","setData","failedToFetch","setFailedToFetch","searchParams","game_id","get","console","log","fetch","then","res","json","data","catch","error","filterMatches","filter","Team1Name","toLowerCase","includes","Team2Name","children","length","map","to","MatchID","className","MatchesBlock","MatchesBlockInfo","MatchesBlockTeam","MatchesBlockCountry","draggable","MatchesBlockImgCountry","src","Team1Country","alt","MatchesBlockImgLogo","Team1Logo","MatchesBlockCoef","MatchesBlockTeam1Coef","Team1Coef","MatchesBlockCenter","MatchesBlockVsDateTime","VsDate","MatchesBlockVs","MatchesBlockPlace","Place","MatchesBlockTeam2","Team2Country","Team2Logo","MatchesBlockTeam2Coef","Team2Coef","MatchesBlockSide","MatchesSideBlockImg1","MatchesSideImg","GameMinLogo","MatchesSideText","season","MatchesSideBlockImg"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/components/MatchBlock.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\nimport { Link, useSearchParams } from 'react-router-dom'\nimport { formatDate } from '../js/TimeValidation'\nimport style from '../styles/Matches.module.css'\nimport { CheckFetch } from './BadFatchDisclaimer'\nimport { NoResultDisclaimer } from './NoResultDisclaimer'\n\nexport function MatchBlock({ value }) {\n\tconst [Match, setData] = useState([])\n\tconst [failedToFetch, setFailedToFetch] = useState(false)\n\n\tconst [searchParams] = useSearchParams()\n\tconst game_id = searchParams.get('game_id')\n\tconsole.log(game_id)\n\t// Fetch Match_List${game_id} from the backend\n\tuseEffect(() => {\n\t\tfetch(`http://localhost:4000/api/Match_List/${game_id}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(data => {\n\t\t\t\tsetFailedToFetch(false)\n\t\t\t\tsetData(data)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetFailedToFetch(true)\n\t\t\t\tconsole.log('Failed to fetch: ', error)\n\t\t\t})\n\t}, [])\n\n\tconsole.log(Match)\n\tconst filterMatches = Match.filter(Match => {\n\t\treturn (\n\t\t\tMatch.Team1Name.toLowerCase().includes(value.toLowerCase()) ||\n\t\t\tMatch.Team2Name.toLowerCase().includes(value.toLowerCase())\n\t\t)\n\t})\n\treturn (\n\t\t<>\n\t\t\t<h1>Matches</h1>\n\t\t\t{failedToFetch ? <CheckFetch /> : console.log('Successful Fetch')}\n\t\t\t{filterMatches.length > 0 ? (\n\t\t\t\tfilterMatches.map(Match => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tto={`${Match.Team1Name}_Vs_${Match.Team2Name}?idMatch=${Match.MatchID}`}\n\t\t\t\t\t\t\tkey={Match.MatchID}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{console.log(Match)}\n\t\t\t\t\t\t\t<div className={style.MatchesBlock}>\n\t\t\t\t\t\t\t\t<div className={style.MatchesBlockInfo}>\n\t\t\t\t\t\t\t\t\t<div className={style.MatchesBlockTeam}>\n\t\t\t\t\t\t\t\t\t\t<div className={style.MatchesBlockCountry}>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tdraggable='false'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={style.MatchesBlockImgCountry}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={'/' + Match.Team1Country}\n\t\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tdraggable='false'\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.MatchesBlockImgLogo}\n\t\t\t\t\t\t\t\t\t\t\tsrc={'/' + Match.Team1Logo}\n\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{console.log(Match.Team1Country)}\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${style.MatchesBlockCoef} ${style.MatchesBlockTeam1Coef}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<p>{Match.Team1Coef}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={style.MatchesBlockCenter}>\n\t\t\t\t\t\t\t\t\t\t<p className={style.MatchesBlockVsDateTime}>\n\t\t\t\t\t\t\t\t\t\t\t{formatDate(Match.VsDate)}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t<p className={style.MatchesBlockVs}>Vs</p>\n\t\t\t\t\t\t\t\t\t\t<p className={style.MatchesBlockPlace}> {Match.Place}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={style.MatchesBlockTeam2}>\n\t\t\t\t\t\t\t\t\t\t<div className={style.MatchesBlockCountry}>\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tdraggable='false'\n\t\t\t\t\t\t\t\t\t\t\t\tclassName={style.MatchesBlockImgCountry}\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={'/' + Match.Team2Country}\n\t\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tdraggable='false'\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.MatchesBlockImgLogo}\n\t\t\t\t\t\t\t\t\t\t\tsrc={'/' + Match.Team2Logo}\n\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${style.MatchesBlockCoef} ${style.MatchesBlockTeam2Coef}`}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<p>{Match.Team2Coef}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={style.MatchesBlockSide}>\n\t\t\t\t\t\t\t\t\t<div className={style.MatchesSideBlockImg1}>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tdraggable='false'\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.MatchesSideImg}\n\t\t\t\t\t\t\t\t\t\t\tsrc={'/' + Match.GameMinLogo}\n\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={style.MatchesSideText}>\n\t\t\t\t\t\t\t\t\t\t<p>{Match.season}</p>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={style.MatchesSideBlockImg}>\n\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\tdraggable='false'\n\t\t\t\t\t\t\t\t\t\t\tclassName={style.MatchesSideImg}\n\t\t\t\t\t\t\t\t\t\t\tsrc={'/' + Match.GameMinLogo}\n\t\t\t\t\t\t\t\t\t\t\talt=''\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t)\n\t\t\t\t})\n\t\t\t) : failedToFetch ? (\n\t\t\t\tconsole.log('Failed Fatch No Results :)')\n\t\t\t) : (\n\t\t\t\t<NoResultDisclaimer value={value} />\n\t\t\t)}\n\t\t</>\n\t)\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}