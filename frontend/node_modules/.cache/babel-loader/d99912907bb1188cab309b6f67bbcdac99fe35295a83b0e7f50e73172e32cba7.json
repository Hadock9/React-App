{"ast":null,"code":"// Валідація Email\nexport const validateEmail=email=>{const re=/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i;return re.test(String(email).toLowerCase())?'':'Email не правильний';};// Валідація пароля\nexport const validatePassword=password=>{const re=/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{6,16}$/;if(!password){return'Поле не може бути пустим';}else if(password.length<6||password.length>16){return'Поле має бути від 6 до 16 символів';}else if(!re.test(String(password))){return'Пароль повинен містити хоча б одну цифру,одну велику літеру,одну малу літеру і один спеціальний символ (!@#$%^&*)';}return'';};// Валідація повторного пароля\nexport const validateRePassword=(rePassword,password)=>{if(!rePassword){return'Поле не може бути пустим';}else if(rePassword!==password){return'Паролі не збігаються';}return'';};// Валідація імені\nexport const validateName=name=>{const re=/^[A-ZА-ЯІЇЄ][a-zа-яіїє'їє]+(?:[- ][A-ZА-ЯІЇЄ][a-zа-яїє'їє]+)?$/;return re.test(name)?'':\"Ім'я повинно містити тільки літери, перша літера мaє бути великою, а решта — маленькими, і можливий один пробіл між словами (якщо ім'я подвійне).\";};// Валідація прізвища\nexport const validateLastName=name=>{const re=/^[A-ZА-ЯІЇЄ][a-zа-яіїє'їє]+(?:[- ][A-ZА-ЯІЇЄ][a-zа-яїє'їє]+)?$/;return re.test(name)?'':'Прізвище повинно містити тільки літери, перша літера мaє бути великою, а решта — маленькими, і можливий один пробіл між словами (якщо прізвище подвійне).';};// Валідація умов\nexport const validateConditions=conditions=>{return conditions?'':'Ви повинні погодитися з умовами.';};","map":{"version":3,"names":["validateEmail","email","re","test","String","toLowerCase","validatePassword","password","length","validateRePassword","rePassword","validateName","name","validateLastName","validateConditions","conditions"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/js/FormValidation.js"],"sourcesContent":["// Валідація Email\nexport const validateEmail = email => {\n\tconst re =\n\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i\n\treturn re.test(String(email).toLowerCase()) ? '' : 'Email не правильний'\n}\n\n// Валідація пароля\nexport const validatePassword = password => {\n\tconst re =\n\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{6,16}$/\n\n\tif (!password) {\n\t\treturn 'Поле не може бути пустим'\n\t} else if (password.length < 6 || password.length > 16) {\n\t\treturn 'Поле має бути від 6 до 16 символів'\n\t} else if (!re.test(String(password))) {\n\t\treturn 'Пароль повинен містити хоча б одну цифру,одну велику літеру,одну малу літеру і один спеціальний символ (!@#$%^&*)'\n\t}\n\treturn ''\n}\n\n// Валідація повторного пароля\nexport const validateRePassword = (rePassword, password) => {\n\tif (!rePassword) {\n\t\treturn 'Поле не може бути пустим'\n\t} else if (rePassword !== password) {\n\t\treturn 'Паролі не збігаються'\n\t}\n\treturn ''\n}\n\n// Валідація імені\nexport const validateName = name => {\n\tconst re = /^[A-ZА-ЯІЇЄ][a-zа-яіїє'їє]+(?:[- ][A-ZА-ЯІЇЄ][a-zа-яїє'їє]+)?$/\n\treturn re.test(name)\n\t\t? ''\n\t\t: \"Ім'я повинно містити тільки літери, перша літера мaє бути великою, а решта — маленькими, і можливий один пробіл між словами (якщо ім'я подвійне).\"\n}\n// Валідація прізвища\nexport const validateLastName = name => {\n\tconst re = /^[A-ZА-ЯІЇЄ][a-zа-яіїє'їє]+(?:[- ][A-ZА-ЯІЇЄ][a-zа-яїє'їє]+)?$/\n\treturn re.test(name)\n\t\t? ''\n\t\t: 'Прізвище повинно містити тільки літери, перша літера мaє бути великою, а решта — маленькими, і можливий один пробіл між словами (якщо прізвище подвійне).'\n}\n\n// Валідація умов\nexport const validateConditions = conditions => {\n\treturn conditions ? '' : 'Ви повинні погодитися з умовами.'\n}\n"],"mappings":"AAAA;AACA,MAAO,MAAM,CAAAA,aAAa,CAAGC,KAAK,EAAI,CACrC,KAAM,CAAAC,EAAE,CACP,oHAAoH,CACrH,MAAO,CAAAA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,CAAG,EAAE,CAAG,qBAAqB,CACzE,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,gBAAgB,CAAGC,QAAQ,EAAI,CAC3C,KAAM,CAAAL,EAAE,CACP,8EAA8E,CAE/E,GAAI,CAACK,QAAQ,CAAE,CACd,MAAO,0BAA0B,CAClC,CAAC,IAAM,IAAIA,QAAQ,CAACC,MAAM,CAAG,CAAC,EAAID,QAAQ,CAACC,MAAM,CAAG,EAAE,CAAE,CACvD,MAAO,oCAAoC,CAC5C,CAAC,IAAM,IAAI,CAACN,EAAE,CAACC,IAAI,CAACC,MAAM,CAACG,QAAQ,CAAC,CAAC,CAAE,CACtC,MAAO,mHAAmH,CAC3H,CACA,MAAO,EAAE,CACV,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,kBAAkB,CAAGA,CAACC,UAAU,CAAEH,QAAQ,GAAK,CAC3D,GAAI,CAACG,UAAU,CAAE,CAChB,MAAO,0BAA0B,CAClC,CAAC,IAAM,IAAIA,UAAU,GAAKH,QAAQ,CAAE,CACnC,MAAO,sBAAsB,CAC9B,CACA,MAAO,EAAE,CACV,CAAC,CAED;AACA,MAAO,MAAM,CAAAI,YAAY,CAAGC,IAAI,EAAI,CACnC,KAAM,CAAAV,EAAE,CAAG,gEAAgE,CAC3E,MAAO,CAAAA,EAAE,CAACC,IAAI,CAACS,IAAI,CAAC,CACjB,EAAE,CACF,mJAAmJ,CACvJ,CAAC,CACD;AACA,MAAO,MAAM,CAAAC,gBAAgB,CAAGD,IAAI,EAAI,CACvC,KAAM,CAAAV,EAAE,CAAG,gEAAgE,CAC3E,MAAO,CAAAA,EAAE,CAACC,IAAI,CAACS,IAAI,CAAC,CACjB,EAAE,CACF,2JAA2J,CAC/J,CAAC,CAED;AACA,MAAO,MAAM,CAAAE,kBAAkB,CAAGC,UAAU,EAAI,CAC/C,MAAO,CAAAA,UAAU,CAAG,EAAE,CAAG,kCAAkC,CAC5D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}