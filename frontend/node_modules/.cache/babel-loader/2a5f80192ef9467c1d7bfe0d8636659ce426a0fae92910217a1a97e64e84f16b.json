{"ast":null,"code":"var _jsxFileName = \"D:\\\\diploma\\\\React-App\\\\frontend\\\\src\\\\pages\\\\Stake.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Stake() {\n  _s();\n  const [Stakes, setData] = useState([]);\n  const [matchId, setMatchId] = useState(0);\n  const [amount, setAmount] = useState(0);\n  const [Coef, setCoef] = useState(0);\n  const [status, setStatus] = useState('pending');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const stakeData = {\n      match_id: parseInt(matchId),\n      amount: parseFloat(amount),\n      Coef: parseFloat(Coef),\n      status: status\n    };\n    console.log(stakeData);\n    const response = fetch('http://localhost:4000/api/Stake', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(stakeData)\n    });\n  };\n  // Fetch users from the backend\n  useEffect(() => {\n    fetch('http://localhost:4000/api/Stake1').then(res => res.json()).then(data => setData(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: Stakes.map(stake => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"stake id \", stake.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"stake match_id \", stake.match_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"stake amount \", stake.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"stake Coef \", stake.Coef]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"stake stake_time \", stake.stake_time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"stake status \", stake.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"------------------------------------------------\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }, this)]\n      }, stake.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"match_id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"match_id\",\n          onChange: e => setMatchId(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"amount\",\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: \"Coef\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"Coef\",\n          onChange: e => setCoef(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_s(Stake, \"AMgG61ZeRy5FhmUJKq7DDGtXb9o=\");\n_c = Stake;\nvar _c;\n$RefreshReg$(_c, \"Stake\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Stake","_s","Stakes","setData","matchId","setMatchId","amount","setAmount","Coef","setCoef","status","setStatus","handleSubmit","e","preventDefault","stakeData","match_id","parseInt","parseFloat","console","log","response","fetch","method","headers","body","JSON","stringify","then","res","json","data","children","map","stake","id","fileName","_jsxFileName","lineNumber","columnNumber","stake_time","action","onSubmit","htmlFor","type","name","onChange","target","value","_c","$RefreshReg$"],"sources":["D:/diploma/React-App/frontend/src/pages/Stake.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport function Stake() {\r\n\tconst [Stakes, setData] = useState([])\r\n\r\n\tconst [matchId, setMatchId] = useState(0)\r\n\tconst [amount, setAmount] = useState(0)\r\n\tconst [Coef, setCoef] = useState(0)\r\n\tconst [status, setStatus] = useState('pending')\r\n\r\n\tconst handleSubmit = async e => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst stakeData = {\r\n\t\t\tmatch_id: parseInt(matchId),\r\n\t\t\tamount: parseFloat(amount),\r\n\t\t\tCoef: parseFloat(Coef),\r\n\t\t\tstatus: status,\r\n\t\t}\r\n\t\tconsole.log(stakeData)\r\n\t\tconst response = fetch('http://localhost:4000/api/Stake', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(stakeData),\r\n\t\t})\r\n\t}\r\n\t// Fetch users from the backend\r\n\tuseEffect(() => {\r\n\t\tfetch('http://localhost:4000/api/Stake1')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(data => setData(data))\r\n\t}, [])\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div>\r\n\t\t\t\t{Stakes.map(stake => (\r\n\t\t\t\t\t<div key={stake.id}>\r\n\t\t\t\t\t\t<p>stake id {stake.id}</p>\r\n\t\t\t\t\t\t<p>stake match_id {stake.match_id}</p>\r\n\t\t\t\t\t\t<p>stake amount {stake.amount}</p>\r\n\t\t\t\t\t\t<p>stake Coef {stake.Coef}</p>\r\n\t\t\t\t\t\t<p>stake stake_time {stake.stake_time}</p>\r\n\t\t\t\t\t\t<p>stake status {stake.status}</p>\r\n\t\t\t\t\t\t<p>------------------------------------------------</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<form action='' onSubmit={handleSubmit}>\r\n\t\t\t\t\t<label htmlFor=''>match_id</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tname='match_id'\r\n\t\t\t\t\t\tonChange={e => setMatchId(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=''>amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tname='amount'\r\n\t\t\t\t\t\tonChange={e => setAmount(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=''>Coef</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\tname='Coef'\r\n\t\t\t\t\t\tonChange={e => setCoef(e.target.value)}\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<button>submit</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}