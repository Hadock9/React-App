{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useFetchUpd = ({\n  url,\n  value,\n  ...props\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const updateValue = async () => {\n      setLoading(true);\n      try {\n        const response = await fetch(url, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            value,\n            ...props // Інші параметри (наприклад, commentId)\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Не вдалося оновити лайки/дизлайки на сервері');\n        }\n      } catch (error) {\n        setError(error.message); // Записуємо помилку\n        console.error('Помилка при оновленні лайків/дизлайків:', error);\n      } finally {\n        setLoading(false); // Запит завершено\n      }\n    };\n    updateValue();\n  }, [url, value, ...Object.values(props)]); // Відстеження залежностей\n\n  return {\n    loading,\n    error\n  }; // Повертаємо стан завантаження та помилки\n};\n_s(useFetchUpd, \"qZrPpo95SUtrpJEa6gIa0oOoDUI=\");\nexport default useFetchUpd;","map":{"version":3,"names":["useEffect","useState","useFetchUpd","url","value","props","_s","loading","setLoading","error","setError","updateValue","response","fetch","method","headers","body","JSON","stringify","ok","Error","message","console","Object","values"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/hooks/fetch/useFetchUpd.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useFetchUpd = ({ url, value, ...props }) => {\n\tconst [loading, setLoading] = useState(false)\n\tconst [error, setError] = useState(null)\n\n\tuseEffect(() => {\n\t\tconst updateValue = async () => {\n\t\t\tsetLoading(true)\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\tmethod: 'PUT',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t...props, // Інші параметри (наприклад, commentId)\n\t\t\t\t\t}),\n\t\t\t\t})\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error('Не вдалося оновити лайки/дизлайки на сервері')\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tsetError(error.message) // Записуємо помилку\n\t\t\t\tconsole.error('Помилка при оновленні лайків/дизлайків:', error)\n\t\t\t} finally {\n\t\t\t\tsetLoading(false) // Запит завершено\n\t\t\t}\n\t\t}\n\n\t\tupdateValue()\n\t}, [url, value, ...Object.values(props)]) // Відстеження залежностей\n\n\treturn { loading, error } // Повертаємо стан завантаження та помилки\n}\n\nexport default useFetchUpd\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,KAAK;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACf,MAAMW,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC/BH,UAAU,CAAC,IAAI,CAAC;MAChB,IAAI;QACH,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACV,GAAG,EAAE;UACjCW,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACR,cAAc,EAAE;UACjB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACpBd,KAAK;YACL,GAAGC,KAAK,CAAE;UACX,CAAC;QACF,CAAC,CAAC;QAEF,IAAI,CAACO,QAAQ,CAACO,EAAE,EAAE;UACjB,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;QAChE;MACD,CAAC,CAAC,OAAOX,KAAK,EAAE;QACfC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC,EAAC;QACxBC,OAAO,CAACb,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MAChE,CAAC,SAAS;QACTD,UAAU,CAAC,KAAK,CAAC,EAAC;MACnB;IACD,CAAC;IAEDG,WAAW,CAAC,CAAC;EACd,CAAC,EAAE,CAACR,GAAG,EAAEC,KAAK,EAAE,GAAGmB,MAAM,CAACC,MAAM,CAACnB,KAAK,CAAC,CAAC,CAAC,EAAC;;EAE1C,OAAO;IAAEE,OAAO;IAAEE;EAAM,CAAC,EAAC;AAC3B,CAAC;AAAAH,EAAA,CAlCKJ,WAAW;AAoCjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}