{"ast":null,"code":"const blurHandler = e => {\n  switch (e.target.name) {\n    case 'Email':\n      setEmailDirty(true);\n      break;\n    case 'Password':\n      setPasswordDirty(true);\n      break;\n  }\n};\nconst EmailHandler = e => {\n  setEmail(e.target.value);\n  const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  if (!re.test(String(e.target.value).toLowerCase())) {\n    setEmailError('Email не правильний');\n  } else {\n    setEmailError('');\n  }\n};\n_c = EmailHandler;\nconst PasswordHandler = e => {\n  setPassword(e.target.value);\n  if (e.target.value.length < 4 || e.target.value.length > 64) {\n    setPasswordError('Password має бути більшим за 8 символів і меншим за 64 ');\n    if (!e.target.value) {\n      setPasswordError('Password не може бути пустим');\n    }\n  } else {\n    setPasswordError('');\n  }\n};\n_c2 = PasswordHandler;\nuseEffect(() => {\n  if (EmailError || PasswordError) {\n    setFormValid(false);\n  } else {\n    setFormValid(true);\n  }\n}, [EmailError, PasswordError]);\nvar _c, _c2;\n$RefreshReg$(_c, \"EmailHandler\");\n$RefreshReg$(_c2, \"PasswordHandler\");","map":{"version":3,"names":["blurHandler","e","target","name","setEmailDirty","setPasswordDirty","EmailHandler","setEmail","value","re","test","String","toLowerCase","setEmailError","_c","PasswordHandler","setPassword","length","setPasswordError","_c2","useEffect","EmailError","PasswordError","setFormValid","$RefreshReg$"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/components/FormValidation.js"],"sourcesContent":["const blurHandler = e => {\n\tswitch (e.target.name) {\n\t\tcase 'Email':\n\t\t\tsetEmailDirty(true)\n\t\t\tbreak\n\t\tcase 'Password':\n\t\t\tsetPasswordDirty(true)\n\t\t\tbreak\n\t}\n}\nconst EmailHandler = e => {\n\tsetEmail(e.target.value)\n\n\tconst re =\n\t\t/^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\n\n\tif (!re.test(String(e.target.value).toLowerCase())) {\n\t\tsetEmailError('Email не правильний')\n\t} else {\n\t\tsetEmailError('')\n\t}\n}\nconst PasswordHandler = e => {\n\tsetPassword(e.target.value)\n\tif (e.target.value.length < 4 || e.target.value.length > 64) {\n\t\tsetPasswordError('Password має бути більшим за 8 символів і меншим за 64 ')\n\t\tif (!e.target.value) {\n\t\t\tsetPasswordError('Password не може бути пустим')\n\t\t}\n\t} else {\n\t\tsetPasswordError('')\n\t}\n}\n\nuseEffect(() => {\n\tif (EmailError || PasswordError) {\n\t\tsetFormValid(false)\n\t} else {\n\t\tsetFormValid(true)\n\t}\n}, [EmailError, PasswordError])\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,CAAC,IAAI;EACxB,QAAQA,CAAC,CAACC,MAAM,CAACC,IAAI;IACpB,KAAK,OAAO;MACXC,aAAa,CAAC,IAAI,CAAC;MACnB;IACD,KAAK,UAAU;MACdC,gBAAgB,CAAC,IAAI,CAAC;MACtB;EACF;AACD,CAAC;AACD,MAAMC,YAAY,GAAGL,CAAC,IAAI;EACzBM,QAAQ,CAACN,CAAC,CAACC,MAAM,CAACM,KAAK,CAAC;EAExB,MAAMC,EAAE,GACP,sHAAsH;EAEvH,IAAI,CAACA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACV,CAAC,CAACC,MAAM,CAACM,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;IACnDC,aAAa,CAAC,qBAAqB,CAAC;EACrC,CAAC,MAAM;IACNA,aAAa,CAAC,EAAE,CAAC;EAClB;AACD,CAAC;AAAAC,EAAA,GAXKR,YAAY;AAYlB,MAAMS,eAAe,GAAGd,CAAC,IAAI;EAC5Be,WAAW,CAACf,CAAC,CAACC,MAAM,CAACM,KAAK,CAAC;EAC3B,IAAIP,CAAC,CAACC,MAAM,CAACM,KAAK,CAACS,MAAM,GAAG,CAAC,IAAIhB,CAAC,CAACC,MAAM,CAACM,KAAK,CAACS,MAAM,GAAG,EAAE,EAAE;IAC5DC,gBAAgB,CAAC,yDAAyD,CAAC;IAC3E,IAAI,CAACjB,CAAC,CAACC,MAAM,CAACM,KAAK,EAAE;MACpBU,gBAAgB,CAAC,8BAA8B,CAAC;IACjD;EACD,CAAC,MAAM;IACNA,gBAAgB,CAAC,EAAE,CAAC;EACrB;AACD,CAAC;AAAAC,GAAA,GAVKJ,eAAe;AAYrBK,SAAS,CAAC,MAAM;EACf,IAAIC,UAAU,IAAIC,aAAa,EAAE;IAChCC,YAAY,CAAC,KAAK,CAAC;EACpB,CAAC,MAAM;IACNA,YAAY,CAAC,IAAI,CAAC;EACnB;AACD,CAAC,EAAE,CAACF,UAAU,EAAEC,aAAa,CAAC,CAAC;AAAA,IAAAR,EAAA,EAAAK,GAAA;AAAAK,YAAA,CAAAV,EAAA;AAAAU,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}