{"ast":null,"code":"var _jsxFileName = \"/Users/vasylfalyovskij/Desktop/React-App/frontend/src/js/loginGoogle.js\",\n  _s = $RefreshSig$();\nimport { GoogleLogin } from '@react-oauth/google';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Logon() {\n  _s();\n  const [showLogin, setShowLogin] = useState(false);\n  const responseSucess = async response => {\n    const {\n      credential\n    } = response;\n    fetch('http://localhost:4000/api/google-login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        token: credential\n      })\n    }).then(response => response.json()).then(data => {\n      console.log('Login successful:', data);\n    }).catch(error => {\n      console.error('Error during login:', error);\n    });\n    if (response.ok) {\n      console.log('Успішний вхід');\n      localStorage.setItem('token', data.token);\n      console.log('Вхід успішний:', data.message);\n      const decoded = jwtDecode(data.token);\n      setIsRegUser(true);\n      setUser(decoded);\n      navigate('/Home');\n    } else {\n      console.log('Помилка:', data.message);\n      if (data.message && data.message.includes('Email not found')) {\n        setEmailError('Email не знайдено.');\n      } else if (data.message && data.message.includes('Incorrect password')) {\n        setPasswordError('Неправильний пароль.');\n      } else {\n        console.error('Помилка на сервері:', data);\n        setGeneralError('Помилка на сервері. Спробуйте пізніше.');\n      }\n    }\n  };\n  const responseFailure = () => {\n    console.log('login is not successful');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showLogin && /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"500804855419-pms6km4isevbtq88rpgbpp02tdjq26fm.apps.googleusercontent.com\",\n      onSuccess: responseSucess,\n      onFailure: responseFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 3\n  }, this);\n}\n_s(Logon, \"98Ax/GnzOET9wQRnerBqUtng7n4=\");\n_c = Logon;\nvar _c;\n$RefreshReg$(_c, \"Logon\");","map":{"version":3,"names":["GoogleLogin","useState","jsxDEV","_jsxDEV","Logon","_s","showLogin","setShowLogin","responseSucess","response","credential","fetch","method","headers","body","JSON","stringify","token","then","json","data","console","log","catch","error","ok","localStorage","setItem","message","decoded","jwtDecode","setIsRegUser","setUser","navigate","includes","setEmailError","setPasswordError","setGeneralError","responseFailure","className","children","clientId","onSuccess","onFailure","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/js/loginGoogle.js"],"sourcesContent":["import { GoogleLogin } from '@react-oauth/google'\nimport { useState } from 'react'\n\nexport default function Logon() {\n\tconst [showLogin, setShowLogin] = useState(false)\n\n\tconst responseSucess = async response => {\n\t\tconst { credential } = response\n\n\t\tfetch('http://localhost:4000/api/google-login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\ttoken: credential,\n\t\t\t}),\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\tconsole.log('Login successful:', data)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error('Error during login:', error)\n\t\t\t})\n\t\tif (response.ok) {\n\t\t\tconsole.log('Успішний вхід')\n\t\t\tlocalStorage.setItem('token', data.token)\n\t\t\tconsole.log('Вхід успішний:', data.message)\n\t\t\tconst decoded = jwtDecode(data.token)\n\t\t\tsetIsRegUser(true)\n\t\t\tsetUser(decoded)\n\t\t\tnavigate('/Home')\n\t\t} else {\n\t\t\tconsole.log('Помилка:', data.message)\n\t\t\tif (data.message && data.message.includes('Email not found')) {\n\t\t\t\tsetEmailError('Email не знайдено.')\n\t\t\t} else if (data.message && data.message.includes('Incorrect password')) {\n\t\t\t\tsetPasswordError('Неправильний пароль.')\n\t\t\t} else {\n\t\t\t\tconsole.error('Помилка на сервері:', data)\n\t\t\t\tsetGeneralError('Помилка на сервері. Спробуйте пізніше.')\n\t\t\t}\n\t\t}\n\t}\n\tconst responseFailure = () => {\n\t\tconsole.log('login is not successful')\n\t}\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t{!showLogin && (\n\t\t\t\t<GoogleLogin\n\t\t\t\t\tclientId='500804855419-pms6km4isevbtq88rpgbpp02tdjq26fm.apps.googleusercontent.com'\n\t\t\t\t\tonSuccess={responseSucess}\n\t\t\t\t\tonFailure={responseFailure}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMO,cAAc,GAAG,MAAMC,QAAQ,IAAI;IACxC,MAAM;MAAEC;IAAW,CAAC,GAAGD,QAAQ;IAE/BE,KAAK,CAAC,wCAAwC,EAAE;MAC/CC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACR,cAAc,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACpBC,KAAK,EAAEP;MACR,CAAC;IACF,CAAC,CAAC,CACAQ,IAAI,CAACT,QAAQ,IAAIA,QAAQ,CAACU,IAAI,CAAC,CAAC,CAAC,CACjCD,IAAI,CAACE,IAAI,IAAI;MACbC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,IAAI,CAAC;IACvC,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACfH,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;IACH,IAAIf,QAAQ,CAACgB,EAAE,EAAE;MAChBJ,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5BI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEP,IAAI,CAACH,KAAK,CAAC;MACzCI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAACQ,OAAO,CAAC;MAC3C,MAAMC,OAAO,GAAGC,SAAS,CAACV,IAAI,CAACH,KAAK,CAAC;MACrCc,YAAY,CAAC,IAAI,CAAC;MAClBC,OAAO,CAACH,OAAO,CAAC;MAChBI,QAAQ,CAAC,OAAO,CAAC;IAClB,CAAC,MAAM;MACNZ,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAACQ,OAAO,CAAC;MACrC,IAAIR,IAAI,CAACQ,OAAO,IAAIR,IAAI,CAACQ,OAAO,CAACM,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QAC7DC,aAAa,CAAC,oBAAoB,CAAC;MACpC,CAAC,MAAM,IAAIf,IAAI,CAACQ,OAAO,IAAIR,IAAI,CAACQ,OAAO,CAACM,QAAQ,CAAC,oBAAoB,CAAC,EAAE;QACvEE,gBAAgB,CAAC,sBAAsB,CAAC;MACzC,CAAC,MAAM;QACNf,OAAO,CAACG,KAAK,CAAC,qBAAqB,EAAEJ,IAAI,CAAC;QAC1CiB,eAAe,CAAC,wCAAwC,CAAC;MAC1D;IACD;EACD,CAAC;EACD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC7BjB,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACvC,CAAC;EAED,oBACCnB,OAAA;IAAKoC,SAAS,EAAC,KAAK;IAAAC,QAAA,EAClB,CAAClC,SAAS,iBACVH,OAAA,CAACH,WAAW;MACXyC,QAAQ,EAAC,0EAA0E;MACnFC,SAAS,EAAElC,cAAe;MAC1BmC,SAAS,EAAEL;IAAgB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAAC1C,EAAA,CAzDuBD,KAAK;AAAA4C,EAAA,GAAL5C,KAAK;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}