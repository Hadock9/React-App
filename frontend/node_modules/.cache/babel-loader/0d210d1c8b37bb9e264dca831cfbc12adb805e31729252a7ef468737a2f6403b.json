{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nconst UseFetchGet = ({\n  url\n}) => {\n  _s();\n  const [Data, setData] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  const [failedToFetch, setFailedToFetch] = useState(null);\n  useEffect(() => {\n    setisLoading(true);\n    fetch(url).then(res => {\n      if (!res.ok) {\n        setFailedToFetch('Network response was not ok');\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setisLoading(false);\n    }).catch(error => {\n      setisLoading(false);\n      setFailedToFetch('Failed to fetch: ', error);\n      console.log('Failed to fetch: ', error);\n    });\n  }, [url]);\n  return {\n    Data,\n    isLoading,\n    failedToFetch\n  };\n};\n_s(UseFetchGet, \"ibZNA4dIZUX0CWuAxaOqLYONmiM=\");\n_c = UseFetchGet;\nexport default UseFetchGet;\nvar _c;\n$RefreshReg$(_c, \"UseFetchGet\");","map":{"version":3,"names":["useEffect","UseFetchGet","url","_s","Data","setData","useState","isLoading","setisLoading","failedToFetch","setFailedToFetch","fetch","then","res","ok","Error","json","data","catch","error","console","log","_c","$RefreshReg$"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/hooks/fetch/useFetchGet.jsx"],"sourcesContent":["import { useEffect } from 'react'\n\nconst UseFetchGet = ({ url }) => {\n\tconst [Data, setData] = useState([])\n\tconst [isLoading, setisLoading] = useState(false)\n\tconst [failedToFetch, setFailedToFetch] = useState(null)\n\tuseEffect(() => {\n\t\tsetisLoading(true)\n\t\tfetch(url)\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tsetFailedToFetch('Network response was not ok')\n\t\t\t\t\tthrow new Error('Network response was not ok')\n\t\t\t\t}\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tsetData(data)\n\t\t\t\tsetisLoading(false)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetisLoading(false)\n\t\t\t\tsetFailedToFetch('Failed to fetch: ', error)\n\t\t\t\tconsole.log('Failed to fetch: ', error)\n\t\t\t})\n\t}, [url])\n\treturn { Data, isLoading, failedToFetch }\n}\n\nexport default UseFetchGet\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGF,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EACxDN,SAAS,CAAC,MAAM;IACfQ,YAAY,CAAC,IAAI,CAAC;IAClBG,KAAK,CAACT,GAAG,CAAC,CACRU,IAAI,CAACC,GAAG,IAAI;MACZ,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACZJ,gBAAgB,CAAC,6BAA6B,CAAC;QAC/C,MAAM,IAAIK,KAAK,CAAC,6BAA6B,CAAC;MAC/C;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACbZ,OAAO,CAACY,IAAI,CAAC;MACbT,YAAY,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,CACDU,KAAK,CAACC,KAAK,IAAI;MACfX,YAAY,CAAC,KAAK,CAAC;MACnBE,gBAAgB,CAAC,mBAAmB,EAAES,KAAK,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;IACxC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACjB,GAAG,CAAC,CAAC;EACT,OAAO;IAAEE,IAAI;IAAEG,SAAS;IAAEE;EAAc,CAAC;AAC1C,CAAC;AAAAN,EAAA,CAzBKF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AA2BjB,eAAeA,WAAW;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}