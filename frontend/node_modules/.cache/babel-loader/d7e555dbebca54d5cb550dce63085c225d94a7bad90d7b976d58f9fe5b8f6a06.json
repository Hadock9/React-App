{"ast":null,"code":"// Валідація Email\nexport const validateEmail = email => {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i;\n  return re.test(String(email).toLowerCase()) ? '' : 'Email неправильний';\n};\n\n// Валідація пароля\nexport const validatePassword = password => {\n  const re = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{8,16}$/;\n  if (!password) {\n    return 'Поле не може бути пустим';\n  } else if (password.length < 6 || password.length > 16) {\n    return 'Поле має бути від 6 до 16 символів';\n  } else if (!re.test(String(password))) {\n    return 'Пароль повинен містити хоча б одну цифру,одну велику літеру,одну малу літеру і один спеціальний символ (!@#$%^&*)';\n  }\n  return '';\n};\n\n// Валідація повторного пароля\nexport const validateRePassword = (rePassword, password) => {\n  if (!rePassword) {\n    return 'Поле не може бути пустим';\n  } else if (rePassword !== password) {\n    return 'Паролі не збігаються';\n  }\n  return '';\n};\n\n// Валідація імені\nexport const validateName = name => {\n  const re = /^[A-ZА-ЯІЇЄ][a-zа-яіїє]+(?: [A-ZА-ЯІЇЄ][a-zа-яіїє]+)?$/;\n  return re.test(name) ? '' : \"Поле повинно містити тільки літери, перша літера мaє бути великою, а решта — маленькими, і можливий один пробіл між словами (якщо ім'я подвійне).\";\n};\n\n// Валідація умов\nexport const validateConditions = conditions => {\n  return conditions ? '' : 'Ви повинні погодитися з умовами.';\n};","map":{"version":3,"names":["validateEmail","email","re","test","String","toLowerCase","validatePassword","password","length","validateRePassword","rePassword","validateName","name","validateConditions","conditions"],"sources":["D:/diploma/React-App/frontend/src/components/FormValidation.js"],"sourcesContent":["// Валідація Email\r\nexport const validateEmail = email => {\r\n\tconst re =\r\n\t\t/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@(([^<>()[\\]\\\\.,;:\\s@\"]+\\.)+[^<>()[\\]\\\\.,;:\\s@\"]{2,})$/i\r\n\treturn re.test(String(email).toLowerCase()) ? '' : 'Email неправильний'\r\n}\r\n\r\n// Валідація пароля\r\nexport const validatePassword = password => {\r\n\tconst re =\r\n\t\t/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[A-Za-z0-9!@#$%^&*]{8,16}$/\r\n\r\n\tif (!password) {\r\n\t\treturn 'Поле не може бути пустим'\r\n\t} else if (password.length < 6 || password.length > 16) {\r\n\t\treturn 'Поле має бути від 6 до 16 символів'\r\n\t} else if (!re.test(String(password))) {\r\n\t\treturn 'Пароль повинен містити хоча б одну цифру,одну велику літеру,одну малу літеру і один спеціальний символ (!@#$%^&*)'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\n// Валідація повторного пароля\r\nexport const validateRePassword = (rePassword, password) => {\r\n\tif (!rePassword) {\r\n\t\treturn 'Поле не може бути пустим'\r\n\t} else if (rePassword !== password) {\r\n\t\treturn 'Паролі не збігаються'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\n// Валідація імені\r\nexport const validateName = name => {\r\n\tconst re = /^[A-ZА-ЯІЇЄ][a-zа-яіїє]+(?: [A-ZА-ЯІЇЄ][a-zа-яіїє]+)?$/\r\n\treturn re.test(name)\r\n\t\t? ''\r\n\t\t: \"Поле повинно містити тільки літери, перша літера мaє бути великою, а решта — маленькими, і можливий один пробіл між словами (якщо ім'я подвійне).\"\r\n}\r\n\r\n// Валідація умов\r\nexport const validateConditions = conditions => {\r\n\treturn conditions ? '' : 'Ви повинні погодитися з умовами.'\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,aAAa,GAAGC,KAAK,IAAI;EACrC,MAAMC,EAAE,GACP,oHAAoH;EACrH,OAAOA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,oBAAoB;AACxE,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGC,QAAQ,IAAI;EAC3C,MAAML,EAAE,GACP,8EAA8E;EAE/E,IAAI,CAACK,QAAQ,EAAE;IACd,OAAO,0BAA0B;EAClC,CAAC,MAAM,IAAIA,QAAQ,CAACC,MAAM,GAAG,CAAC,IAAID,QAAQ,CAACC,MAAM,GAAG,EAAE,EAAE;IACvD,OAAO,oCAAoC;EAC5C,CAAC,MAAM,IAAI,CAACN,EAAE,CAACC,IAAI,CAACC,MAAM,CAACG,QAAQ,CAAC,CAAC,EAAE;IACtC,OAAO,mHAAmH;EAC3H;EACA,OAAO,EAAE;AACV,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAGA,CAACC,UAAU,EAAEH,QAAQ,KAAK;EAC3D,IAAI,CAACG,UAAU,EAAE;IAChB,OAAO,0BAA0B;EAClC,CAAC,MAAM,IAAIA,UAAU,KAAKH,QAAQ,EAAE;IACnC,OAAO,sBAAsB;EAC9B;EACA,OAAO,EAAE;AACV,CAAC;;AAED;AACA,OAAO,MAAMI,YAAY,GAAGC,IAAI,IAAI;EACnC,MAAMV,EAAE,GAAG,wDAAwD;EACnE,OAAOA,EAAE,CAACC,IAAI,CAACS,IAAI,CAAC,GACjB,EAAE,GACF,mJAAmJ;AACvJ,CAAC;;AAED;AACA,OAAO,MAAMC,kBAAkB,GAAGC,UAAU,IAAI;EAC/C,OAAOA,UAAU,GAAG,EAAE,GAAG,kCAAkC;AAC5D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}