{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst useFetchGet = ({\n  url,\n  id,\n  Effect\n}) => {\n  _s();\n  const [Data, setData] = useState([]);\n  const [Effect1, setEffect] = useState(Effect);\n  const [isLoading, setisLoading] = useState(false);\n  const [failedToFetch, setFailedToFetch] = useState(null);\n  useEffect(() => {\n    setisLoading(true);\n    const fetchUrl = id ? `${url}/${id}` : url;\n    fetch(fetchUrl).then(res => {\n      if (!res.ok) {\n        setFailedToFetch('Network response was not ok');\n        throw new Error('Network response was not ok');\n      }\n      return res.json();\n    }).then(data => {\n      setData(data);\n      setisLoading(false);\n    }).catch(error => {\n      setisLoading(false);\n      setFailedToFetch(`Failed to fetch: ${error}`);\n      console.log('Failed to fetch: ', error);\n    });\n  }, [Effect1]);\n  return {\n    Data,\n    isLoading,\n    failedToFetch\n  };\n};\n_s(useFetchGet, \"yArZ0ByBPk8f/hJlLEryQCgTHKE=\");\nexport default useFetchGet;","map":{"version":3,"names":["useEffect","useState","useFetchGet","url","id","Effect","_s","Data","setData","Effect1","setEffect","isLoading","setisLoading","failedToFetch","setFailedToFetch","fetchUrl","fetch","then","res","ok","Error","json","data","catch","error","console","log"],"sources":["/Users/vasylfalyovskij/Desktop/React-App/frontend/src/hooks/fetch/useFetchGet.jsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\nconst useFetchGet = ({ url, id, Effect }) => {\n\tconst [Data, setData] = useState([])\n\tconst [Effect1, setEffect] = useState(Effect)\n\tconst [isLoading, setisLoading] = useState(false)\n\tconst [failedToFetch, setFailedToFetch] = useState(null)\n\tuseEffect(() => {\n\t\tsetisLoading(true)\n\n\t\tconst fetchUrl = id ? `${url}/${id}` : url\n\n\t\tfetch(fetchUrl)\n\t\t\t.then(res => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tsetFailedToFetch('Network response was not ok')\n\t\t\t\t\tthrow new Error('Network response was not ok')\n\t\t\t\t}\n\t\t\t\treturn res.json()\n\t\t\t})\n\t\t\t.then(data => {\n\t\t\t\tsetData(data)\n\t\t\t\tsetisLoading(false)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tsetisLoading(false)\n\t\t\t\tsetFailedToFetch(`Failed to fetch: ${error}`)\n\t\t\t\tconsole.log('Failed to fetch: ', error)\n\t\t\t})\n\t}, [Effect1])\n\treturn { Data, isLoading, failedToFetch }\n}\n\nexport default useFetchGet\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,GAAG;EAAEC,EAAE;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAACI,MAAM,CAAC;EAC7C,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxDD,SAAS,CAAC,MAAM;IACfY,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMG,QAAQ,GAAGX,EAAE,GAAG,GAAGD,GAAG,IAAIC,EAAE,EAAE,GAAGD,GAAG;IAE1Ca,KAAK,CAACD,QAAQ,CAAC,CACbE,IAAI,CAACC,GAAG,IAAI;MACZ,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACZL,gBAAgB,CAAC,6BAA6B,CAAC;QAC/C,MAAM,IAAIM,KAAK,CAAC,6BAA6B,CAAC;MAC/C;MACA,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACbd,OAAO,CAACc,IAAI,CAAC;MACbV,YAAY,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,CACDW,KAAK,CAACC,KAAK,IAAI;MACfZ,YAAY,CAAC,KAAK,CAAC;MACnBE,gBAAgB,CAAC,oBAAoBU,KAAK,EAAE,CAAC;MAC7CC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,KAAK,CAAC;IACxC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACf,OAAO,CAAC,CAAC;EACb,OAAO;IAAEF,IAAI;IAAEI,SAAS;IAAEE;EAAc,CAAC;AAC1C,CAAC;AAAAP,EAAA,CA7BKJ,WAAW;AA+BjB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}